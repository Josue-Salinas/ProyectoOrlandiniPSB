/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectopsb;

import Clases.DatosCompartidos;
import Clases.PuntoCritico;
import Clases.Usuario;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author JAFET
 */
public class VentanaEliminar extends javax.swing.JFrame {

    /**
     * Creates new form VentanaEliminar
     */
    Usuario usuarioActual;
    public VentanaEliminar(Usuario usuarioActual) {
        initComponents();
        this.setLocationRelativeTo(null);
        jlistPSolucionados.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        txtResumenP.setEditable(false);
        txtAreaHistorialS.setEditable(false);
        DefaultListModel<String> lista = new DefaultListModel<>();
        for(PuntoCritico punto : DatosCompartidos.puntosCriticos){
            if(punto.getDistrito().contains("(Solucionado)")){
                lista.addElement(punto.getDireccion() + " - "+ punto.getDistrito());
            }
        }
        jlistPSolucionados.setModel(lista);
        this.usuarioActual = usuarioActual;
        lblUsuarioActual.setText("Usuario: "+usuarioActual.getNombre()+" || Correco: "+usuarioActual.getCorreo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnEliminarPunto = new javax.swing.JLabel();
        btnVerHistorial = new javax.swing.JLabel();
        btnVolverVentanaPrincipal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlistPSolucionados = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaHistorialS = new javax.swing.JTextArea();
        txtResumenP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblUsuarioActual = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        btnEliminarPunto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarPunto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarPuntoMouseClicked(evt);
            }
        });
        jPanel1.add(btnEliminarPunto);
        btnEliminarPunto.setBounds(30, 670, 160, 50);

        btnVerHistorial.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerHistorialMouseClicked(evt);
            }
        });
        jPanel1.add(btnVerHistorial);
        btnVerHistorial.setBounds(250, 670, 160, 50);

        btnVolverVentanaPrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolverVentanaPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolverVentanaPrincipalMouseClicked(evt);
            }
        });
        jPanel1.add(btnVolverVentanaPrincipal);
        btnVolverVentanaPrincipal.setBounds(140, 750, 160, 40);

        jScrollPane1.setViewportView(jlistPSolucionados);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(40, 220, 350, 160);

        txtAreaHistorialS.setColumns(20);
        txtAreaHistorialS.setRows(5);
        jScrollPane2.setViewportView(txtAreaHistorialS);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(40, 460, 350, 160);
        jPanel1.add(txtResumenP);
        txtResumenP.setBounds(40, 622, 350, 30);

        jLabel2.setText("puede seleccionar varios con ctrl + click");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(40, 200, 220, 16);
        jPanel1.add(lblUsuarioActual);
        lblUsuarioActual.setBounds(20, 20, 390, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminar nuevo.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(6, 6, 420, 881);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerHistorialMouseClicked
        
        int alta = 0;
        int media = 0;
        int baja = 0;
        String txtHistorialp = "";
        for(PuntoCritico pun : DatosCompartidos.historialSolucionado){
            
            switch(pun.getPrioridad().toLowerCase()){
                case "alta":
                    alta++;
                    break;
                case "media":
                    media++;
                    break;
                case "baja":
                    baja++;
                    break;
            }
            
            txtHistorialp += "Direccion: "+ pun.getDireccion() + "\n";
            txtHistorialp+= "Distrito: "+ pun.getDistrito() + "\n";
            txtHistorialp += "Prioridad: "+ pun.getPrioridad() + "\n";
            txtHistorialp += "Observacion: "+ pun.getObservacion() + "\n";
            txtHistorialp += "===============================\n";
            
        }
        if(txtHistorialp.isEmpty()){
            txtAreaHistorialS.setText("No hay Puntos solucionados en el Historial...");
        }else{
            txtAreaHistorialS.setText(txtHistorialp);
            txtResumenP.setText("Alta : "+alta+"  ||  Media: "+media+"  ||  Baja: "+baja);
        }
    }//GEN-LAST:event_btnVerHistorialMouseClicked

    private void btnEliminarPuntoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarPuntoMouseClicked
        
        List<String> seleccionados = jlistPSolucionados.getSelectedValuesList();
        
        if(seleccionados.isEmpty()){
            JOptionPane.showMessageDialog(this, "Por favor seleccione un punto a eliminar");
            return;
        }
        
        ArrayList<PuntoCritico> SelecElim = new ArrayList<>();
        
        for(String texto : seleccionados){
            String direccion = texto.split(" - ")[0].trim();
            for(PuntoCritico punto : DatosCompartidos.puntosCriticos){
                if(punto.getDireccion().equals(direccion) && punto.getDistrito().contains("(Solucionado)")){
                    SelecElim.add(punto);
                    DatosCompartidos.historialSolucionado.add(punto);
                    break;
                }
            }
        }
        
        DatosCompartidos.puntosCriticos.removeAll(SelecElim);
        
        DefaultListModel<String> wa = new DefaultListModel<>();
        for(PuntoCritico punto : DatosCompartidos.puntosCriticos){
            if(punto.getDistrito().contains("(Solucionado)")){
                wa.addElement(punto.getDireccion() + " - "+ punto.getDistrito());
            }
        }
        jlistPSolucionados.setModel(wa);
        
        JOptionPane.showMessageDialog(this, "Se eliminaron los Puntos Solucionados Con Exito!"); 
    }//GEN-LAST:event_btnEliminarPuntoMouseClicked

    private void btnVolverVentanaPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverVentanaPrincipalMouseClicked
        
        this.setVisible(false);
        new VentanaPrincipal(usuarioActual).setVisible(true);
    }//GEN-LAST:event_btnVolverVentanaPrincipalMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new VentanaEliminar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnEliminarPunto;
    private javax.swing.JLabel btnVerHistorial;
    private javax.swing.JLabel btnVolverVentanaPrincipal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> jlistPSolucionados;
    private javax.swing.JLabel lblUsuarioActual;
    private javax.swing.JTextArea txtAreaHistorialS;
    private javax.swing.JTextField txtResumenP;
    // End of variables declaration//GEN-END:variables
}
